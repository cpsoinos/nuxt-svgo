import { ModuleOptions } from './module'

function resolveDefaultImport({ defaultImport, customComponent }: ModuleOptions) {
  switch (defaultImport) {
    case 'url_encode':
      return `
// Default - loads optimized svg as data uri (uses svgo + \`mini-svg-data-uri\`)
declare module '*.svg' {
  const dataUri: string;
  export default dataUri;
}
`
    case 'raw':
      return `
// Default - loads contents as text
declare module '*.svg' {
  const text: string;
  export default text;
}
`
    case 'raw_optimized':
      return `
// Default - loads optimized svg as text
declare module '*.svg' {
  const text: string;
  export default text;
}
`
    case 'skipsvgo':
      return `
// Default - loads contents as a component (unoptimized, without <${customComponent}/>)
declare module '*.svg' {
  import { DefineComponent, SVGAttributes, ReservedProps } from 'vue';

  const component: DefineComponent<SVGAttributes & ReservedProps>;
  export default component;
}
`
    case 'component':
      return `
// Default - loads optimized svg as a component
declare module '*.svg' {
  import { DefineComponent, SVGAttributes, ReservedProps } from 'vue';

  const component: DefineComponent<SVGAttributes & ReservedProps>;
  export default component;
}
`
    case 'componentext':
      return `
// Default - loads optimized svg with <${customComponent}/> component
declare module '*.svg' {
  import { DefineComponent } from 'vue';
  import { ${customComponent} } from '#components';

  type OmitIcon<T> = DefineComponent<Omit<ComponentProps<T>, 'icon'>>;

  const component: OmitIcon<typeof ${customComponent}>;
  export default component;
}
`
    default:
      return ``
  }
}

export function generateImportQueriesDts(options: ModuleOptions) {
  return `// Generated by nuxt-svgo module

type ComponentProps<T> = T extends new (...args: any) => {
    $props: infer P;
} ? NonNullable<P> : T extends (props: infer P, ...args: any) => any ? P : {};
${!options.explicitImportsOnly ? resolveDefaultImport(options) : ``}
// loads optimized svg as data uri (uses svgo + \`mini-svg-data-uri\`)
declare module '*.svg?url_encode' {
  const dataUri: string;
  export default dataUri;
}

// loads contents as text
declare module '*.svg?raw' {
  const text: string;
  export default text;
}

// loads optimized svg as text
declare module '*.svg?raw_optimized' {
  const text: string;
  export default text;
}

// loads contents as a component (unoptimized, without <${options.customComponent}/>)
declare module '*.svg?skipsvgo' {
  import { DefineComponent, SVGAttributes, ReservedProps } from 'vue';

  const component: DefineComponent<SVGAttributes & ReservedProps>;
  export default component;
}

// loads optimized svg as a component
declare module '*.svg?component' {
  import { DefineComponent, SVGAttributes, ReservedProps } from 'vue';

  const component: DefineComponent<SVGAttributes & ReservedProps>;
  export default component;
}

// loads optimized svg with <${options.customComponent}/> component
declare module '*.svg?componentext' {
  import { DefineComponent } from 'vue';
  import { ${options.customComponent} } from '#components';

  type OmitIcon<T> = DefineComponent<Omit<ComponentProps<T>, 'icon'>>;

  const component: OmitIcon<typeof ${options.customComponent}>;
  export default component;
}
`
}
